{"version":3,"sources":["config/_fonts.scss","utilities/_helpers.scss","utilities/mixins/_clearfix.scss","../../node_modules/normalize.scss/normalize.scss","base/_main.scss","utilities/mixins/_font-smoothing.scss","config/_colours.scss","base/_links.scss","base/_icon.scss","base/_media.scss","base/_tables.scss","base/_forms.scss","base/_headings.scss","config/_typography.scss","base/_lists.scss","base/_paragraphs.scss","components/_buttons.scss","components/_grid.scss","utilities/mixins/_media-query.scss","components/_container.scss","components/_row.scss","../../node_modules/susy/sass/susy/output/support/_rem.scss","components/_susy.scss","../../node_modules/susy/sass/susy/output/support/_clearfix.scss","../../node_modules/susy/sass/susy/output/float/_end.scss","../../node_modules/susy/sass/susy/language/susy/_gallery.scss","../../node_modules/susy/sass/susy/language/susy/_rows.scss","../../node_modules/susy/sass/susy/output/shared/_direction.scss","../../node_modules/susy/sass/susy/language/susy/_gutters.scss","objects/_social.scss","utilities/mixins/_hide-text.scss","modules/_about.scss","config/_layout.scss","../../node_modules/susy/sass/susy/language/susy/_span.scss","modules/_contact.scss","modules/_footer.scss","modules/_hero.scss","modules/_work.scss","modules/_nav.scss","docs.scss"],"names":[],"mappings":"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","file":"docs.css","sourcesContent":["/*\n *\n * Robert Newth\n *\n * -------------------\n * Fonts\n * - Locally hosted font references (icons or textual)\n * -------------------\n *\n */\n\n$font-directory: '../font';\n\n@import url('https://fonts.googleapis.com/css?family=Libre+Baskerville:400,700');\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Helper Classes\n * -------------------\n *\n */\n\n\n/*\n * Layout\n */\n \n.clearfix,\n.cf {\n    @include clearfix();\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Clearfix\n * -------------------\n *\n */\n\n\n@mixin clearfix {\n    zoom: 1;\n\n    &:before,\n    &:after {\n        content: \"\";\n        display: table;\n    }\n\n    &:after {\n        clear: both;\n    }\n}\n","/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */\n\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS text size adjust after orientation change, without disabling\n *    user zoom.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/**\n * Remove default margin.\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\n * 1. Correct `inline-block` display not defined in IE 8/9.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Prevent modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\n */\n\n[hidden],\ntemplate {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * Remove the gray background color from active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * Improve readability when focused and also mouse hovered in all browsers.\n */\n\na:active,\na:hover {\n  outline: 0;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\n\nb,\nstrong {\n  font-weight: bold;\n}\n\n/**\n * Address styling not present in Safari and Chrome.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/**\n * Address styling not present in IE 8/9.\n */\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove border when inside `a` element in IE 8/9/10.\n */\n\nimg {\n  border: 0;\n}\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\n\nhr {\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\n * Contain overflow in all browsers.\n */\n\npre {\n  overflow: auto;\n}\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n\n/**\n * 1. Correct color not being inherited.\n *    Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit; /* 1 */\n  font: inherit; /* 2 */\n  margin: 0; /* 3 */\n}\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\n\nbutton {\n  overflow: visible;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *    `input` and others.\n */\n\nbutton,\nhtml input[type=\"button\"], /* 1 */\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n  cursor: pointer; /* 3 */\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\ninput {\n  line-height: normal;\n}\n\n/**\n * It's recommended that you don't attempt to style these elements.\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\n *\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n */\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome\n *    (include `-moz` to future-proof).\n */\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box; /* 2 */\n  box-sizing: content-box;\n}\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n */\n\nlegend {\n  border: 0; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\n   ========================================================================== */\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Main\n * - html & body base styling\n * -------------------\n *\n */\n\n\n/*\n * Config\n */\n\n/*\n * Mixin - Font scale size\n * Sets the initial font scale size.\n *\n * $scale: [true | false] - Set to true to use first value.\n * $modular-size: Base modular scale font size-base.\n * $size: Original base font size.\n */\n\n@mixin font-scale-size($scale, $modular-size: 1em, $size: 62.5%) {\n    @if $scale == true {\n        font-size: $modular-size;\n    } @else {\n        font-size: $size;\n    }\n}\n\n/*\n * Mixin - Font scale body\n * Sets body font scaling\n * $scale: [true | false] - Set to true to use modular scale.\n */\n\n@mixin font-scale-body($scale) {\n    @if $scale == true {\n        @include ms-respond(font-size, 1);\n    } @else {\n        font-size: 1.4rem;\n\n        // @include media-query(min, $lap-start) {\n        //     font-size: 1.8rem;\n        // }\n    }\n}\n\n\n/*\n * Styling\n */\n\nhtml {\n    font-family: $font-body;\n    box-sizing: border-box;\n    @include font-scale-size($font-scale);\n    @include smoothing();\n}\n\n*,\n*:before,\n*:after {\n    box-sizing: inherit;\n}\n\nbody {\n    color: $color-pencil;\n    text-rendering: optimizeLegibility; // https://developer.mozilla.org/en-US/docs/Web/CSS/text-rendering\n    @include font-scale-body($font-scale);\n}\n\n::selection {\n    background: $color-silver;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Font Smoothing\n * -------------------\n *\n */\n\n\n@mixin smoothing() {\n    font-smoothing: antialiased;\n    -webkit-font-smoothing: antialiased;\n    -moz-font-smoothing: greyscale;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Colours\n * -------------------\n *\n */\n\n\n/*\n * Neutrals\n */\n\n$color-white:            rgb(255, 255, 255);\n$color-black:            rgb(0, 0, 0);\n\n\n/*\n * Custom colours\n */\n\n$color-primary:          #393939;\n\n$color-charcoal:         #393939;\n$color-pencil:           #464646;\n$color-gray:             #898989;\n$color-silver:           #C2C2C2;\n\n\n/*\n * Status\n */\n\n$color-failure:          #C0392B !default;\n$color-alert:            #F4D03F !default;\n$color-success:          #87D37C !default;\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Links\n * -------------------\n *\n */\n\na {\n    color: $color-primary;\n    text-decoration: none;\n\n    &:hover,\n    &:active,\n    &:focus {\n        color: darken($color-primary, 5%);\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Icon template\n * - Used by gulp-svg-sprite to generate icons\n * - Additional variables loaded in from gulpfile.js\n *   - spriteName \t  : Icon name\n     - spriteDimsX \t  : Icon width\n     - spriteDimsY    : Icon height\n * - spriteName used to create unique mixin names in case\n     multiple icon tasks are created.\n * -------------------\n *\n */\n\n\n/*\n * Sass map of icons\n */\n\n$icons: (\n\tlinkedin: (positionX: 0%, positionY: 0%),\n\ttwitter: (positionX: 100%, positionY: 0%),\n);\n\n\n/*\n * Icon base\n * Sets base styles for all icons\n */\n\n@mixin icon-base {\n\tdisplay: inline-block;\n\tbackground-image: url(../img/icon/dist/icons.svg);\n\tbackground-position: no-repeat;\n\tbackground-size: auto 100%;\n}\n\n\n/*\n * Icon size\n * Sets icon size\n */\n\n@mixin icon-size($size: 1) {\n\twidth: 36px * $size;\n\theight: 36px * $size;\n}\n\n\n/*\n * Icon\n * Adds all necessary styles to add an icon.\n * Includes icon base styles, a specific icon sprite and sets a size.\n */\n\n@mixin icon($sprite, $size: 1) {\n\t@include icon-base();\n\t@include icon-sprite($sprite);\n\t@include icon-size($size);\n}\n\n\n/*\n * Icon\n * Used to include a specific icon only\n */\n\n@mixin icon-sprite($sprite) {\n\t$sprite: map-get($icons, $sprite);\n\tbackground-position: map-get($sprite, positionX) map-get($sprite, positionY);\n\tcontent: '\\00a0';\n}\n\n\n/*\n * Base icon class\n * Used to include icons within markup in conjuction with\n * a specific icon class. Sets base and size styles.\n */\n\n.icon {\n\t@include icon-base();\n\t@include icon-size();\n}\n\n\n/*\n * Example icon size modifier\n * Project dependent, represents a high level reusable way of\n * setting a consistent icon size\n */\n\n.icon--large {\n\t@include icon-size(2);\n}\n\n\n/*\n * Specific icon sprite classes\n */\n \n.icon__linkedin {\n\tbackground-position: 0% 0%;\n}\n\n.icon__twitter {\n\tbackground-position: 100% 0%;\n}\n\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Media\n * - images, video, figures, embeds\n * -------------------\n *\n */\n\nimg,\nvideo,\nembed {\n    border: none;\n    max-width: 100%;\n    height: auto;\n}\n\nfigure {\n    position: relative;\n    margin-bottom: 3em;\n\n    img {\n        display: block;\n        max-width: 100%;\n        margin: 0 auto;\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Tables\n * -------------------\n *\n */\n\ntable {\n    width: 100%;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Base / Forms\n * -------------------\n *\n * - Base styling for forms\n *\n */\n\n\n/*\n * Inputs\n */\n\ninput,\ntextarea {\n    @include smoothing();\n    background: #f1f1f1;\n    border: 2px solid #0080ac;\n    padding: 1em .75em;\n    -webkit-appearance: none;\n    width: 100%;\n\n    &:focus {\n        background: $color-white;\n        outline: 0;\n    }\n}\n\ntextarea {\n    height: 7.5em;\n}\n\n\n/*\n * Labels\n */\n\nlabel {\n    display: block;\n    margin: 0 0 0.25em 0;\n}\n\n\n/*\n * Containers\n */\n\nfieldset {\n    border: 0;\n    margin: 0;\n    padding: 0;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Headings\n * -------------------\n *\n */\n\n\n/*\n * ---------------\n * Styling\n * ---------------\n */\n\n#{headings(1,6)} {\n    margin: 0;\n    line-height: $baseline;\n    letter-spacing: 0.08em;\n    color: $color-primary;\n    font-weight: $weight-semibold;\n}\n\nh1, .h1 {\n    font-size: 2.2em;\n    text-align: center;\n}\n\nh2, .h2 {\n    font-size: 2.2em;\n    text-align: center;\n    margin-bottom: $spacing/4;\n}\n\nh3, .h3 {\n    font-size: 1.5em;\n}\n\nh4, .h4 {\n    font-size: 1.1em;\n}\n\nh5, .h5 {\n    font-size: 1.1em;\n}\n\nh6, .h6 {\n    font-size: 1em;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Typography\n * - Config for everything typography across the project\n * - Does not include typographic config for components, objects, modules\n * -------------------\n *\n */\n\n\n/*\n * Stacks\n */\n\n$font-body:               'Libre Baskerville', serif;\n$font-mono:               Courier New;\n\n\n/*\n * Weights\n */\n\n$weight-thin:             100;\n$weight-extra-light:      200;\n$weight-light:            300;\n$weight-regular:          400;\n$weight-medium:           500;\n$weight-semibold:         600;\n$weight-bold:             700;\n$weight-heavy:            800;\n$weight-black:            900;\n\n\n/*\n * Font scaling\n * Used to switch between modular and traditional scaling.\n */\n\n$font-scale:              false;\n\n\n/*\n * Modular scale config\n * Cannot be placed inside mixin as the modular scale\n * settings aren't initialised.\n */\n\n@if $font-scale == true {\n    $ms-base:             1em;\n    $ms-range:            1.1 $lap-start, 1.3 $wide-start;\n}\n\n\n/*\n * Spacing\n */\n\n$baseline:                1.35;\n$kern-display:            -0.025em;\n$kern-body:               normal;\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Lists\n * -------------------\n *\n */\n\n\n/*\n * ---------------\n * Styling\n * ---------------\n */\n\nul, ol {\n    margin-left: 1em;\n    padding-left: .75em;\n    line-height: $baseline;\n\n    li {\n        margin-top: .5em;\n    }\n}\n\nul {\n    list-style: square;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Paragraphs\n * -------------------\n *\n */\n\n\n/*\n * ---------------\n * Styling\n * ---------------\n */\n\np {\n    line-height: 1.6em;\n    margin: $spacing/4 0 0;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Buttons\n * -------------------\n *\n */\n\n\n/*\n * ---------------\n * Config\n * ---------------\n */\n\n\n/*\n * Mixin - Button Base\n */\n\n@mixin button-base {\n    color: $color-primary;\n    font-size: 1em;\n    padding: 0 $spacing;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    border: 1px solid $color-primary;\n    position: relative;\n    margin-top: $spacing/2;\n    height: 36px;\n    line-height: 36px;\n\n    &:before {\n        content: \"\";\n        border: 1px solid $color-primary;\n        display: block;\n        position: absolute;\n        left: 1px;\n        right: 1px;\n        top: 1px;\n        bottom: 1px;\n        margin: 1px;\n        z-index: -1;\n        background: $color-white;\n        transition: outline-color .5s ease;\n        outline: 2px solid $color-white;\n    }\n\n    &:hover, &:active, &:focus {\n\n        &:before {\n            outline: 2px solid $color-primary;\n        }\n    }\n}\n\n\n/*\n * Styling\n */\n\n.button {\n    @include button-base;\n\n    &--full {\n        width: 100%;\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Grid\n * -------------------\n *\n */\n\n\n/*\n * ---------------\n * Config\n * ---------------\n */\n\n/*\n * Config - Grid Spacing\n */\n\n$grid-horizontal-spacing:         $spacing / 2;\n$grid-horizontal-spacing-tablet:  $grid-horizontal-spacing;\n$grid-primary-breakpoint:         $lap-start;\n\n\n/*\n * Mixin - Specific grid width class generation\n */\n\n@mixin context-widths($context, $grids) {\n    @each $grid in $grids {\n        @for $i from 1 through $grid {\n            .#{$context}-#{$grid}-#{$i} {\n                width: ($i / $grid) * 100%;\n            }\n        }\n    }\n}\n\n\n/*\n * Mixin - Offset grid class generation\n */\n\n@mixin context-offsets($context, $grids) {\n    @each $grid in $grids {\n        @for $i from 1 through $grid {\n            .#{$context}-offset-#{$grid}-#{$i} {\n                margin-left: ($i / $grid) * 100%;\n            }\n\n            .#{$context}-offset-#{$grid}-#{$i}-right {\n                margin-right: ($i / $grid) * 100%;\n            }\n        }\n    }\n}\n\n\n/*\n * Mixin - Blockgrids\n * - outputs block grid classes e.g. '.grid--lap-2-up' means on lap, grid cells widths are 2up (50/50)\n */\n\n@mixin context-blockgrids($context, $grids) {\n    @each $grid in $grids {\n        .grid--#{$context}-#{$grid}up > .grid__cell {\n            width: (1 / $grid) * 100%\n        }\n\n        .grid--#{$context}-#{$grid}up > .grid__cell:nth-child(#{$grid}n+1) {\n            clear: left;\n        }\n    }\n}\n\n\n/*\n * ---------------\n * Styling\n * ---------------\n */\n\n.grid {\n    @include clearfix();\n    margin-left: -1 * $grid-horizontal-spacing;\n\n    @include media-query(min, $grid-primary-breakpoint){\n        margin-left: -1 * $grid-horizontal-spacing-tablet;\n    }\n\n    &__cell {\n        float: left;\n        display: inline;\n        min-height: 1px;\n        padding-left: $grid-horizontal-spacing;\n        margin: 0 0 3em;\n        width: 100%;\n\n        @include media-query(min, $grid-primary-breakpoint){\n            padding-left: $grid-horizontal-spacing-tablet;\n        }\n    }\n\n\n    /*\n     * Mod - Expanded\n     * (increases the gutter width)\n     */\n\n    &--expanded {\n        margin-left: -1 * ($grid-horizontal-spacing * 2);\n\n        @include media-query(min, $grid-primary-breakpoint){\n            margin-left: -1 * ($grid-horizontal-spacing-tablet * 2);\n        }\n\n        .grid__cell {\n            padding-left: $grid-horizontal-spacing * 2;\n\n            @include media-query(min, $grid-primary-breakpoint){\n                padding-left: $grid-horizontal-spacing-tablet * 2;\n            }\n        }\n    }\n\n\n    /*\n     * Mod - Equal Spacing\n     * (makes the horizontal and vertical spacing equal)\n     */\n\n    &--equal-spacing {\n        .grid__cell {\n            margin-bottom: $spacing / 2;\n\n            @include media-query(min, $grid-primary-breakpoint){\n                margin-bottom: $spacing * .67;\n            }\n        }\n    }\n}\n\n\n/*\n * Styling - Breakpoint specific grid generator\n * (generates grid classes like lap-6-2 and lap-2up)\n */\n\n$grids: (2, 3, 4);\n\n@each $breakpoint in $breakpoints {\n    $context: nth($breakpoint, 1);\n    $min:     nth($breakpoint, 2);\n    $max:     nth($breakpoint, 3);\n\n    @include media-query(min, $min) {\n        @include context-widths($context, $grids); // * e.g. <div class=\"lap-4-2\" />\n        @include context-offsets($context, $grids); // * e.g. <div class=\"lap-offset-4-2\" />\n    }\n\n    @include media-query-bracket($min, $max) {\n        @include context-blockgrids($context, $grids); // * e.g. <div class=\"grid--lap-2up\" />\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Media Query\n * -------------------\n *\n * todo: add IE flag.\n */\n\n\n/*\n * ===================================\n * Creates media query width closure\n *\n * $type = min, max, breakpoint ID (e.g. palm) or retina\n * $breakpoint = width (e.g. 1000px or 40em)\n *\n * `@include media-query(min, $lap-start);`\n * `@include media-query(max, $lap-start + 200px);`\n *\n * If the @ie flag is set to true then it builds a normal CSS rule (without the media query closure).\n * This only happens if the breakpoint is a certain height or above.\n *\n * ===================================\n */\n\n@mixin media-query($type, $breakpoint: $lap-start) {\n    @if $type == \"min\" {\n        @media only screen and (min-width: $breakpoint) {\n            @content\n        }\n    } @else if $type == \"max\" {\n        @media only screen and (max-width: $breakpoint) {\n            @content;\n        }\n    } @else if $type == \"palm\" {\n        @media only screen and (max-width: $lap-start) {\n            @content;\n        }\n    } @else if $type == \"lap\" {\n        @media only screen and (min-width: $lap-start) and (max-width: $desk-start) {\n            @content;\n        }\n    } @else if $type == \"desk\" {\n        @media only screen and (min-width: $desk-start) and (max-width: $wide-start) {\n            @content;\n        }\n    } @else if $type == \"wide\" {\n        @media only screen and (min-width: $wide-start) {\n            @content;\n        }\n    } @else if $type == \"retina\" {\n        @media only screen and (min-device-pixel-ratio: 2),\n        only screen and (min-resolution: 192dpi),\n        only screen and (min-resolution: 2dppx) {\n            @content;\n        }\n    }\n}\n\n\n/*\n* ===================================\n* Creates media query height closure\n*\n* $type = min or max\n* $height = height (e.g. 1000px or 40em)\n*\n* `@include media-height(min, 200px);`\n* `@include media-height(max, 800px);`\n*\n* ===================================\n*/\n\n@mixin media-query-height($type, $height) {\n    @if $type == \"min\" {\n        @media only screen and (min-height: $height) {\n            @content;\n        }\n    } @else if $type == \"max\" {\n        @media only screen and (max-height: $height) {\n            @content;\n        }\n    }\n}\n\n\n/*\n * ===================================\n * Creates media query brackets closure for targeting a width between 2 values (e.g. between 500-1000px)\n *\n * $to = start width (e.g. 500px or 20em)\n * $from = end width (e.g. 1000px or 40em)\n *\n * `@include media-query-bracket($lap-start, $desk-start);`\n * `@include media-query-bracket(400px, 800px);`\n *\n * ===================================\n */\n\n@mixin media-query-bracket($from: 0, $to: 0) {\n    @if $to > $from {\n        @media only screen and (min-width: $from) and (max-width: $to) {\n            @content;\n        }\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Container\n * -------------------\n *\n */\n\n@mixin container-base {\n\t@include clearfix();\n\tmargin: 0 auto;\n\tpadding: 0 $spacing/2;\n\tmax-width: 54.858em;\n}\n\n.container {\n\t@include container-base();\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Row\n * -------------------\n *\n */\n\n .row {\n \twidth: 100%;\n \t@include clearfix();\n }","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Susy - Example grid system\n * This is purely a template and you should build a custom solution\n * tailored to your classes\n * http://susydocs.oddbird.net/en/latest/\n * -------------------\n *\n */\n\n\n/*\n * ---------------\n * Styling\n * ---------------\n */\n\n/*\n * Method 1: Using gallery mixin to clear margins\n * at various breakpoints\n */\n\n.susy {\n\t@include container(100%);\n\tmargin: ($spacing * .67) 0;\n\n\t&__grid {\n\t\t@include gallery(6);\n\t\theight: 10em;\n\t\tbackground: $color-primary;\n\t\tmargin-bottom: $spacing / 2;\n\n\t\t&:nth-child(odd) {\n\t\t\tbackground: lighten($color-primary, 10%);\n\t\t}\n\n\t\t@include media-query(min, $lap-start) {\n\t\t\t@include gallery(4);\n\t\t}\n\n\t\t@include media-query(min, $desk-start) {\n\t\t\t@include gallery(3);\n\t\t}\n\t}\n}\n\n/*\n * Method 2: Using nth-child and span mixin to clear margins\n * at various breakpoints\n */\n\n.susy-span {\n\t@include container(100%);\n\tmargin: ($spacing * .67) 0;\n\n\t&__grid {\n\t\t@include span(6);\n\t\theight: 10em;\n\t\tbackground: $color-primary;\n\t\tmargin-bottom: $spacing / 2;\n\n\t\t@include media-query-bracket($lap-start, $desk-start) {\n\t\t\t@include span(4);\n\t\t}\n\n\t\t@include media-query(min, $desk-start) {\n\t\t\t@include span(3);\n\t\t}\n\n\t\t&:nth-child(odd) {\n\t\t\tbackground: lighten($color-primary, 10%);\n\t\t}\n\n\t\t&:nth-child(even) {\n\t\t\t@include media-query(max, $lap-start) {\n\t\t\t\t@include last;\n\t\t\t}\n\t\t}\n\n\t\t&:nth-child(3n+3) {\n\t\t\t@include media-query-bracket($lap-start, $desk-start) {\n\t\t\t\t@include last;\n\t\t\t}\n\t\t}\n\n\t\t&:nth-child(4n+4) {\n\t\t\t@include media-query(min, $desk-start) {\n\t\t\t\t@include last;\n\t\t\t}\n\t\t}\n\t}\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Float Ends API\n// ==============\n\n// Susy End Defaults\n// -----------------\n// - PRIVATE\n@include susy-defaults((\n  last-flow: to,\n));\n\n// Float Last\n// ----------\n// - [$flow]  : ltr | rtl\n@mixin float-last(\n  $flow: map-get($susy-defaults, flow),\n  $last-flow: map-get($susy-defaults, last-flow),\n  $margin: 0\n) {\n  $to: to($flow);\n\n  $output: (\n    float: if($last-flow == to, $to, null),\n    margin-#{$to}: $margin,\n  );\n\n  @include output($output);\n}\n\n// Float First\n// -----------\n// - [$flow]  : ltr | rtl\n@mixin float-first(\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    margin-#{from($flow)}: 0,\n  );\n\n  @include output($output);\n}\n","// Gallery Syntax\n// ==============\n\n// Gallery\n// -------\n// Create an isolated gallery\n// - $span        : <span>\n// - [$selector]  : child | of-type\n@mixin gallery(\n  $span,\n  $selector: child\n) {\n  $inspect    : $span;\n  $span       : parse-span($span);\n  $span       : map-merge($span, (location: 1));\n\n  $n            : susy-get(span, $span);\n  $columns      : susy-get(columns, $span);\n  $context      : susy-count($columns);\n  $flow         : susy-get(flow, $span);\n\n  $inside       : is-inside($span);\n  $from         : from($flow);\n  $line         : floor($context / $n);\n  $symmetrical  : is-symmetrical($columns);\n\n  $output: (\n    width             : null,\n    float             : from,\n    margin-before     : null,\n    margin-after      : null,\n    padding-before    : null,\n    padding-after     : null,\n    flow              : $flow,\n  );\n\n  @if $inside {\n    $gutters: get-gutters($span);\n    $output: map-merge($output, (\n      padding-before: map-get($gutters, before),\n      padding-after: map-get($gutters, after),\n    ));\n  }\n\n  @if $symmetrical {\n    $output: map-merge($output, (width: get-span-width($span)));\n  }\n\n  $box          : susy-get(box-sizing, $span);\n  $global-box   : if(susy-get(global-box-sizing) == 'border-box', true, false);\n\n  @include susy-inspect(gallery, $inspect);\n\n  // Collective Output\n  @if $box == border-box or ($inside and not($box) and not($global-box)) {\n    @include output((box-sizing: border-box));\n  } @else if $box == content-box {\n    @include output((box-sizing: content-box));\n  }\n\n  @include float-span-output($output...);\n\n  // Individual Loop\n  @for $item from 1 through $line {\n    $nth: '#{$line}n + #{$item}';\n    &:nth-#{$selector}(#{$nth}) {\n      // Individual Prep\n      $output: (\n        width             : if($symmetrical, null, get-span-width($span)),\n        float             : null,\n        margin-before     : get-isolation($span),\n        margin-after      : -100%,\n        padding-before    : null,\n        padding-after     : null,\n        flow              : $flow,\n      );\n\n      // Individual Output\n      @include float-span-output($output...);\n\n      @if get-edge($span) == first {\n        @include break;\n        @include first($span);\n      } @else {\n        @include nobreak;\n      }\n\n      // Individual Location Increment\n      $location: get-location($span) + $n;\n      $location: if($location > $context, 1, $location);\n      $span: map-merge($span, (location: $location));\n    }\n  }\n}\n","// Row Start & End\n// ===============\n\n// Break\n// -----\n// Apply to any element that should force a line break.\n@mixin break {\n  @include output((clear: both));\n}\n\n\n// NoBreak\n// -------\n// Cancel the break() effect, e.g. when using media queries.\n@mixin nobreak {\n  @include output((clear: none));\n}\n\n\n// Full\n// ----\n// - [$context]: <layout shorthand>\n@mixin full(\n  $context: $susy\n) {\n  $inspect : $context;\n  @include susy-inspect(full, $inspect);\n  @include span(full of parse-grid($context) break);\n}\n\n\n// First\n// -----\n// - [$context]: <settings>\n@mixin first(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n  $flow     : susy-get(flow, $context);\n\n  @include susy-inspect(first, $inspect);\n  @if not(is-split($context)) {\n    @include float-first($flow);\n  }\n}\n\n@mixin alpha(\n  $context: $susy\n) {\n  @include first($context);\n}\n\n\n// Last\n// ----\n// - [$context]: <settings>\n@mixin last(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n\n  @include susy-inspect(last, $inspect);\n\n  $output: (\n    flow: susy-get(flow, $context),\n    last-flow: susy-get(last-flow, $context),\n    margin: if(is-split($context), null, 0),\n  );\n\n  @include float-last($output...);\n}\n\n@mixin omega(\n  $context: $susy\n) {\n  @include last($context);\n}\n\n\n// Get Edge\n// --------\n// Calculate edge value based on location, if possible\n@function get-edge(\n  $span\n) {\n  $span       : parse-span($span);\n  $edge       : susy-get(edge, $span);\n\n  @if not($edge) {\n    $count: susy-count(susy-get(columns, $span));\n    $location: susy-get(location, $span);\n    $n: susy-get(span, $span);\n\n    $number: if(type-of($location) == number, true, false);\n    $index: if($number and unitless($location), true, false);\n\n    @if $n == $count {\n      $edge: full;\n    } @else if $location and $n and $index {\n      @if $location == 1 {\n        $edge: if($n == $count, full, first);\n      } @else if $location + $n - 1 == $count {\n        $edge: last;\n      }\n    }\n  }\n\n  @if $edge == alpha or $edge == omega {\n    $edge: if($edge == alpha, first, last);\n  }\n\n  @return $edge;\n}\n\n\n// Get Location\n// ------------\n// Calculate location value based on edge, if possible\n@function get-location(\n  $span\n) {\n  $span       : parse-span($span);\n  $location   : susy-get(location, $span);\n  $edge       : get-edge($span);\n  $n          : susy-get(span, $span);\n\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\n    @if $edge == first {\n      $location: 1;\n    } @else if $edge == last {\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\n    }\n  }\n\n  @return $location\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Social\n * -------------------\n *\n */\n\n.social {\n    margin: 0;\n    padding: 0;\n    display: inline-block;\n\n    &__item {\n        list-style: none;\n        display: inline-block;\n        margin: 0;\n        line-height: 0;\n\n        .contact & {\n            float: left;\n            margin-left: 5px;\n        }\n    }\n\n    &__link {\n        display: block;\n        border: 1px solid $color-primary;\n        @include hide-text;\n        position: relative;\n\n        &:before {\n            content: \"\";\n            border: 1px solid #393939;\n            display: block;\n            position: absolute;\n            left: 1px;\n            right: 1px;\n            top: 1px;\n            bottom: 1px;\n            margin: 1px;\n            z-index: -1;\n            background: $color-white;\n            transition: outline-color .5s ease;\n            outline: 2px solid $color-white;\n\n            .hero & {\n                background-color: $color-silver;\n                outline-color: $color-silver;\n            }\n        }\n\n        &:hover, &:active, &:focus {\n\n            &:before {\n                outline: 2px solid $color-primary;\n            }\n        }\n    }\n\n    &__twitter {\n        @include icon(twitter);\n    }\n\n    &__linkedin {\n        @include icon(linkedin);\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Hide text\n * -------------------\n *\n */\n\n\n@mixin hide-text {\n    text-indent: -999em;\n    white-space: nowrap;\n    overflow: hidden;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * About\n * -------------------\n *\n */\n\n.about {\n    @include clearfix();\n    margin-bottom: $spacing;\n\n    @include media-query(min, $lap-start) {\n        display: flex;\n        flex-wrap: wrap;\n    }\n\n    p {\n        font-size: .9em;\n    }\n\n    &__container {\n        background-color: $color-silver;\n        padding: $spacing $spacing/2;\n        @include clearfix();\n\n        @include media-query(min, $lap-start) {\n            padding: $spacing;\n        }\n\n        &:nth-child(3), &:nth-child(4) {\n            border-top: 1px solid $color-silver;\n\n            @include media-query(min, $lap-start) {\n                width: 50%;\n                float: left;\n            }\n        }\n\n        &:last-child {\n\n            @include media-query(min, $lap-start) {\n                border-left: 1px solid $color-silver;\n            }\n        }\n\n        &--shaded {\n    \t\tbackground-color: $color-pencil;\n            color: $color-silver;\n\n            #{headings(1,6)} {\n                color: $color-silver;\n            }\n    \t}\n    }\n\n    &__image {\n        @include media-query(max, $mob-start) {\n            max-width: 80%;\n            margin: 0 auto;\n        }\n\n        @include media-query(min, $mob-start) {\n            @include span(4 of 12 2);\n        }\n    }\n\n    &__supporting-text {\n\n        p {\n\n            &:first-child {\n                font-weight: $weight-semibold;\n\n                @include media-query(min, $mob-start) {\n                    margin-top: 0;\n                }\n            }\n        }\n\n        @include media-query(min, $mob-start) {\n            @include span(8 of 12 2 last);\n        }\n    }\n\n    &__sub-title {\n        margin-top: $spacing;\n\n        &:first-child {\n            margin-top: $spacing/2;\n        }\n    }\n\n    &__title {\n\n        &--spacing {\n            margin-top: 1.5em;\n        }\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Layout\n * - Page widths and main breakpoint configuration\n * - Grid config and gutter widths\n * - z-index vars\n * -------------------\n *\n */\n\n\n/*\n * General\n */\n\n$page-width:        105.555555555555em;\n\n\n/*\n * z-index\n */\n\n$zindex-super:      9999;\n$zindex-higher:     20;\n$zindex-high:       10;\n$zindex-mid:        5;\n$zindex-low:        2;\n\n\n/*\n * Main breakpoints\n */\n\n$mob-start:         30em;\n$lap-start:         42.66666666666em;\n$desk-start:        56.8888888888em;\n$wide-start:        $page-width;\n\n$breakpoints: (\n    'palm'  0             $lap-start,\n    'lap'   $lap-start    $desk-start,\n    'desk'  $desk-start   $page-width,\n    'wide'  $wide-start   9999em\n);\n\n\n/*\n * Spacing\n */\n\n$spacing: 2em;\n\n\n/*\n * Susy config\n */\n\n$susy: (\n \tflow: ltr,\n \tcontainer-position: center,\n \tcolumns: 12,\n \tgutters: .25,\n \tglobal-box-sizing: border-box,\n \tlast-flow: from\n);\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Contact\n * -------------------\n *\n */\n\n.contact {\n    @include clearfix();\n    text-align: center;\n\n    &__button {\n        margin-top: 0;\n        float: left;\n    }\n\n    &__buttons {\n        display: inline-block;\n        margin-bottom: $spacing/2;\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Footer\n * -------------------\n *\n */\n\n.footer {\n    @include clearfix();\n\n    &__copyright {\n        text-align: center;\n        font-size: .8em;\n        margin-bottom: $spacing/2;\n        letter-spacing: 0.08em;\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Hero\n * -------------------\n *\n */\n\n.hero {\n    @include clearfix();\n    background: $color-charcoal;\n    min-height: 32.143em;\n    position: relative;\n    height: 100vh;\n    border: 1em solid $color-white;\n\n    &__container {\n        position: absolute;\n        bottom: $spacing;\n        width: 100%;\n    }\n\n    &__menu {\n        position: absolute;\n        background: $color-silver;\n        width: 100%;\n        height: 100%;\n        z-index: 10;\n        display: none;\n\n        .menu-open & {\n            display: block;\n        }\n\n        &-content {\n            text-align: center;\n            position: relative;\n            top: 50%;\n            transform: translateY(-50%);\n\n            .social {\n                margin-top: $spacing/2;\n            }\n        }\n\n        &-icon {\n            cursor: pointer;\n            display: block;\n            height: 17px;\n            width: 20px;\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            z-index: 11;\n\n            &:hover, &:active, &:focus {\n                .hero__menu-lines {\n                    &:before {\n                        width: 20px;\n                    }\n                }\n            }\n        }\n\n        &-lines {\n            display: block;\n            height: 2px;\n            width: 20px;\n            background: $color-silver;\n            position: relative;\n            top: 7px;\n\n            .active & {\n                background: none;\n            }\n\n            &:before {\n                content: \"\";\n                display: block;\n                height: 2px;\n                width: 18px;\n                background: $color-silver;\n                position: relative;\n                top: -7px;\n                transition: width .3s ease;\n\n                .active & {\n                    transform: rotate(-45deg);\n                    top: 0;\n                    width: 20px;\n                    background: $color-primary;\n                }\n            }\n\n            &:after {\n                content: \"\";\n                display: block;\n                height: 2px;\n                width: 20px;\n                background: $color-silver;\n                position: relative;\n                top: 5px;\n\n                .active & {\n                    transform: rotate(45deg);\n                    top: -2px;\n                    background: $color-primary;\n                }\n            }\n        }\n    }\n\n    &__logo {\n        display: block;\n        width: 168px;\n        height: 168px;\n        margin: 0 auto $spacing/2;\n    }\n\n    &__title {\n        color: $color-silver;\n        margin-bottom: .3em;\n    }\n\n    &__text {\n        color: $color-silver;\n        text-align: center;\n        font-size: 1.2em;\n        line-height: $baseline;\n        letter-spacing: 0.08em;\n        margin: 0;\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Work\n * -------------------\n *\n */\n\n.work {\n    @include clearfix();\n\n    &__title {\n        padding-top: .5em;\n    }\n\n    &__items {\n        @include media-query(min, $mob-start) {\n            display: flex;\n            flex-wrap: wrap;\n        }\n    }\n\n    &__item {\n        margin-bottom: $spacing;\n        position: relative;\n        padding-bottom: $spacing*1.75;\n\n        @include media-query(min, $mob-start) {\n            @include span(6 of 12 2);\n\n            &:nth-of-type(2n) {\n                @include span(6 of 12 2 last);\n            }\n        }\n\n        &-image {\n            margin-bottom: $spacing/2;\n        }\n\n        &-text {\n\n            &--italics {\n                font-style: italic;\n                color: $color-gray;\n                font-size: .9em;\n            }\n        }\n    }\n\n    &__button {\n        position: absolute;\n        bottom: 0;\n    }\n}\n","/*\n *\n * Robert Newth\n *\n * -------------------\n * Nav\n * -------------------\n *\n */\n\n.nav {\n    margin: 0;\n    padding: 0;\n\n    &__item {\n        list-style: none;\n        font-size: 2.2em;\n        font-weight: $weight-semibold;\n        margin-top: .2em;\n    }\n}\n","@import \"core.scss\";\n\n.doc-hero {\n    text-align: center;\n    background: $color-primary;\n    padding: 20vh 0;\n    color: $color-white;\n    text-transform: capitalize;\n    @include smoothing();\n\n    &--short {\n        background: #d0d0d0;\n        color: #c1c1c1;\n        padding: 5vh 0;\n    }\n\n    &__title {\n        color: inherit;\n    }\n}\n\n.doc-nav {\n    text-transform: capitalize;\n\n    a {\n        display: block;\n    }\n\n    @include media-query(min, $lap-start) {\n        float: left;\n        width: 50%;\n    }\n}\n"],"sourceRoot":"/source/"}